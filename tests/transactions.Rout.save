
R version 2.12.1 (2010-12-16)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: i686-pc-linux-gnu (32-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library("arules")
Loading required package: Matrix
Loading required package: lattice

Attaching package: 'Matrix'

The following object(s) are masked from 'package:base':

    det


Attaching package: 'arules'

The following object(s) are masked from 'package:stats':

    aggregate

The following object(s) are masked from 'package:base':

    %in%

> 
> data <- list(
+   c("a","b","c"),
+   c("a","b"),
+   c("a","b","d"),
+   c("b","e"),
+   c("a","d"),
+   c("d","e"),
+   c("a","b","d","e","f","g")
+     )
> names(data) <- paste("Tr",c(1:7), sep = "")
> 
> 
> 
> 
> ##################################################
> ### test transactions
> 
> t <- as(data, "transactions")
> t
transactions in sparse format with
 7 transactions (rows) and
 7 items (columns)
> summary(t)
transactions as itemMatrix in sparse format with
 7 rows (elements/itemsets/transactions) and
 7 columns (items) and a density of 0.4081633 

most frequent items:
      a       b       d       e       c (Other) 
      5       5       4       3       1       2 

element (itemset/transaction) length distribution:
sizes
2 3 6 
4 2 1 

   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  2.000   2.000   2.000   2.857   3.000   6.000 

includes extended item information - examples:
  labels
1      a
2      b
3      c

includes extended transaction information - examples:
  transactionID
1           Tr1
2           Tr2
3           Tr3
> inspect(t[1:2])
  items transactionID
1 {a,                
   b,                
   c}             Tr1
2 {a,                
   b}             Tr2
> 
> m <- as(t, "matrix")
> m
    a b c d e f g
Tr1 1 1 1 0 0 0 0
Tr2 1 1 0 0 0 0 0
Tr3 1 1 0 1 0 0 0
Tr4 0 1 0 0 1 0 0
Tr5 1 0 0 1 0 0 0
Tr6 0 0 0 1 1 0 0
Tr7 1 1 0 1 1 1 1
> as(as(m, "transactions"), "list")
$Tr1
[1] "a" "b" "c"

$Tr2
[1] "a" "b"

$Tr3
[1] "a" "b" "d"

$Tr4
[1] "b" "e"

$Tr5
[1] "a" "d"

$Tr6
[1] "d" "e"

$Tr7
[1] "a" "b" "d" "e" "f" "g"

> 
> as(t, "list")
$Tr1
[1] "a" "b" "c"

$Tr2
[1] "a" "b"

$Tr3
[1] "a" "b" "d"

$Tr4
[1] "b" "e"

$Tr5
[1] "a" "d"

$Tr6
[1] "d" "e"

$Tr7
[1] "a" "b" "d" "e" "f" "g"

> LIST(t, decode = FALSE)
[[1]]
[1] 1 2 3

[[2]]
[1] 1 2

[[3]]
[1] 1 2 4

[[4]]
[1] 2 5

[[5]]
[1] 1 4

[[6]]
[1] 4 5

[[7]]
[1] 1 2 4 5 6 7

> 
> 
> 
> 
> 
> ##########################################################################
> ### compare transactions with missing "c", "f", "g"
> 
> t <- as(data, "transactions")[2:6]
> t_comp <- as(data[2:6], "transactions")
> 
> as(t, "ngCMatrix")
7 x 5 sparse Matrix of class "ngCMatrix"
  Tr2 Tr3 Tr4 Tr5 Tr6
a   |   |   .   |   .
b   |   |   |   .   .
c   .   .   .   .   .
d   .   |   .   |   |
e   .   .   |   .   |
f   .   .   .   .   .
g   .   .   .   .   .
> as(t_comp, "ngCMatrix")
4 x 5 sparse Matrix of class "ngCMatrix"
  Tr2 Tr3 Tr4 Tr5 Tr6
a   |   |   .   |   .
b   |   |   |   .   .
d   .   |   .   |   |
e   .   .   |   .   |
> 
> 
> ## test apriori and eclat
> fsets <- apriori(t, parameter = list(target = "frequ", supp = 0.2),
+     control=list(verb=FALSE))
Warning in apriori(t, parameter = list(target = "frequ", supp = 0.2), control = list(verb = FALSE)) :
  You chose a very low absolute support count of 1. You might run out of memory! Increase minimum support.

> esets <- eclat(t, parameter = list(target = "frequ", supp = 0.2, 
+         tidList = TRUE), control =list(verb=FALSE))
Warning in eclat(t, parameter = list(target = "frequ", supp = 0.2, tidList = TRUE),  :
  You chose a very low absolute support count of 1. You might run out of memory! Increase minimum support.

> 
> fsets_comp <- apriori(t_comp, parameter = list(target = "frequ", supp = 0.2),
+     control=list(verb=FALSE))
Warning in apriori(t_comp, parameter = list(target = "frequ", supp = 0.2),  :
  You chose a very low absolute support count of 1. You might run out of memory! Increase minimum support.

> esets_comp <- eclat(t_comp, parameter = list(target = "frequ", supp = 0.2),
+     control=list(verb=FALSE))
Warning in eclat(t_comp, parameter = list(target = "frequ", supp = 0.2),  :
  You chose a very low absolute support count of 1. You might run out of memory! Increase minimum support.

> 
> as(items(fsets), "ngCMatrix")
7 x 10 sparse Matrix of class "ngCMatrix"
                     
a . . . | . . . | | |
b . | . . | . | | . |
c . . . . . . . . . .
d . . | . . | | . | |
e | . . . | | . . . .
f . . . . . . . . . .
g . . . . . . . . . .
> as(items(fsets_comp), "ngCMatrix")
4 x 10 sparse Matrix of class "ngCMatrix"
                     
a . . . | . . . | | |
b . | . . | . | | . |
d . . | . . | | . | |
e | . . . | | . . . .
> 
> as(items(esets), "ngCMatrix")
7 x 10 sparse Matrix of class "ngCMatrix"
                     
a . . | | . | | . . .
b | . | . | | . | . .
c . . . . . . . . . .
d . | | | | . . . | .
e | | . . . . . . . |
f . . . . . . . . . .
g . . . . . . . . . .
> as(items(esets_comp), "ngCMatrix")
4 x 10 sparse Matrix of class "ngCMatrix"
                     
a . . | | . | | . . .
b | . | . | | . | . .
d . | | | | . . . | .
e | | . . . . . . . |
> 
> ## compare if output is the same
> all(table(match(fsets, esets)) == 1)
[1] TRUE
> all(table(match(fsets_comp, esets_comp)) == 1)
[1] TRUE
> 
> 
> ##########################################################################
> ### test tidLists
> 
> tl <- (as(t,"tidLists"))
> tl
tidLists in sparse format with
 7 items/itemsets (rows) and
 5 transactions (columns)
> as(tl, "list")
$a
[1] "Tr2" "Tr3" "Tr5"

$b
[1] "Tr2" "Tr3" "Tr4"

$c
character(0)

$d
[1] "Tr3" "Tr5" "Tr6"

$e
[1] "Tr4" "Tr6"

$f
character(0)

$g
character(0)

> as(tl, "matrix")
    Tr2   Tr3   Tr4   Tr5   Tr6
a  TRUE  TRUE FALSE  TRUE FALSE
b  TRUE  TRUE  TRUE FALSE FALSE
c FALSE FALSE FALSE FALSE FALSE
d FALSE  TRUE FALSE  TRUE  TRUE
e FALSE FALSE  TRUE FALSE  TRUE
f FALSE FALSE FALSE FALSE FALSE
g FALSE FALSE FALSE FALSE FALSE
> inspect(as(tl, "transactions"))
  items transactionID
1 {a,                
   b}             Tr2
2 {a,                
   b,                
   d}             Tr3
3 {b,                
   e}             Tr4
4 {a,                
   d}             Tr5
5 {d,                
   e}             Tr6
> 
> summary(tl)
tidLists in sparse format with
 7 items/itemsets (rows) and
 5 transactions (columns)

most frequent transactions:
      a       b       d       e       c (Other) 
      3       3       3       2       0       0 

item frequency distribution:
sizes
0 2 3 
3 1 3 

   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  0.000   0.000   2.000   1.571   3.000   3.000 

includes extended item information - examples:
  labels
1      a
2      b
3      c
> 
