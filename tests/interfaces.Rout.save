
R version 2.4.1 Patched (2007-03-31 r41272)
Copyright (C) 2007 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library("arules")
Loading required package: stats4
Loading required package: Matrix
Loading required package: lattice
**fixing ngCMatrix validation
> 
> data <- list(
+     c("a","b","c"),
+     c("a","b"),
+     c("a","b","d"),
+     c("b","e"),
+     c("a","c"),
+     c("c","e"),
+     c("a","b","d","e")
+     )
> names(data) <- paste("Tr",c(1:7), sep = "")
> t <- as(data, "transactions")
> 
> 
> ##########################################################
> # test the apriori interface
> 
> ### rules
> r <- apriori(t, parameter=list(supp=0.25, conf=0))

parameter specification:
 confidence minval smax arem  aval originalSupport support minlen maxlen target
          0    0.1    1 none FALSE            TRUE    0.25      1      5  rules
   ext
 FALSE

algorithmic control:
 filter tree heap memopt load sort verbose
    0.1 TRUE TRUE  FALSE TRUE    2    TRUE

apriori - find association rules with the apriori algorithm
version 4.21 (2004.05.09)        (c) 1996-2004   Christian Borgelt
set item appearances ...[0 item(s)] done [0.00s].
set transactions ...[5 item(s), 7 transaction(s)] done [0.00s].
sorting and recoding items ... [5 item(s)] done [0.00s].
creating transaction tree ... done [0.00s].
checking subsets of size 1 2 3 done [0.00s].
writing ... [18 rule(s)] done [0.00s].
creating S4 object  ... done [0.00s].
> r
set of 18 rules 
> summary(r)
set of 18 rules

rule length distribution (lhs + rhs):sizes
 1  2  3 
 5 10  3 

   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  1.000   1.250   2.000   1.889   2.000   3.000 

summary of quality measures:
    support         confidence          lift       
 Min.   :0.2857   Min.   :0.2857   Min.   :0.9333  
 1st Qu.:0.2857   1st Qu.:0.4071   1st Qu.:1.0000  
 Median :0.2857   Median :0.6667   Median :1.0600  
 Mean   :0.3810   Mean   :0.6447   Mean   :1.1735  
 3rd Qu.:0.4286   3rd Qu.:0.8000   3rd Qu.:1.4000  
 Max.   :0.7143   Max.   :1.0000   Max.   :1.7500  
> inspect(SORT(r, by = "lift")[1:2])
  lhs    rhs   support confidence lift
1 {a,                                 
   b} => {d} 0.2857143        0.5 1.75
2 {d} => {b} 0.2857143        1.0 1.40
> 
> ### test appearance
> r <- apriori(t, parameter=list(supp=0.25, conf=0),
+      appearance=list(rhs=c("a","b"), default= "lhs"))

parameter specification:
 confidence minval smax arem  aval originalSupport support minlen maxlen target
          0    0.1    1 none FALSE            TRUE    0.25      1      5  rules
   ext
 FALSE

algorithmic control:
 filter tree heap memopt load sort verbose
    0.1 TRUE TRUE  FALSE TRUE    2    TRUE

apriori - find association rules with the apriori algorithm
version 4.21 (2004.05.09)        (c) 1996-2004   Christian Borgelt
set item appearances ...[2 item(s)] done [0.00s].
set transactions ...[5 item(s), 7 transaction(s)] done [0.00s].
sorting and recoding items ... [5 item(s)] done [0.00s].
creating transaction tree ... done [0.00s].
checking subsets of size 1 2 done [0.00s].
writing ... [6 rule(s)] done [0.00s].
creating S4 object  ... done [0.00s].
> inspect(r)
  lhs    rhs   support confidence      lift
1 {}  => {b} 0.7142857  0.7142857 1.0000000
2 {}  => {a} 0.7142857  0.7142857 1.0000000
3 {c} => {a} 0.2857143  0.6666667 0.9333333
4 {d} => {b} 0.2857143  1.0000000 1.4000000
5 {d} => {a} 0.2857143  1.0000000 1.4000000
6 {e} => {b} 0.2857143  0.6666667 0.9333333
> 
> ### test lhs.support
> r <- apriori(t, parameter=list(supp=0.25, conf=0, originalSupp=FALSE, ext=TRUE))

parameter specification:
 confidence minval smax arem  aval originalSupport support minlen maxlen target
          0    0.1    1 none FALSE           FALSE    0.25      1      5  rules
  ext
 TRUE

algorithmic control:
 filter tree heap memopt load sort verbose
    0.1 TRUE TRUE  FALSE TRUE    2    TRUE

apriori - find association rules with the apriori algorithm
version 4.21 (2004.05.09)        (c) 1996-2004   Christian Borgelt
set item appearances ...[0 item(s)] done [0.00s].
set transactions ...[5 item(s), 7 transaction(s)] done [0.00s].
sorting and recoding items ... [5 item(s)] done [0.00s].
creating transaction tree ... done [0.00s].
checking subsets of size 1 2 3 4 done [0.00s].
writing ... [42 rule(s)] done [0.00s].
creating S4 object  ... done [0.00s].
> inspect(r[1:2])
  lhs    rhs   support confidence lhs.support lift
1 {}  => {c} 0.4285714  0.4285714           1    1
2 {}  => {d} 0.2857143  0.2857143           1    1
> 
> 
> 
> 
> ##########################################################
> # test the eclat interface
> 
> f <- eclat(t)

parameter specification:
 tidLists support minlen maxlen            target   ext
    FALSE     0.1      1      5 frequent itemsets FALSE

algorithmic control:
 sparse sort verbose
      7   -2    TRUE

eclat - find frequent item sets with the eclat algorithm
version 2.6 (2004.08.16)         (c) 2002-2004   Christian Borgelt
create itemset ... 
set transactions ...[5 item(s), 7 transaction(s)] done [0.00s].
sorting and recoding items ... [5 item(s)] done [0.00s].
creating bit matrix ... [5 row(s), 7 column(s)] done [0.00s].
writing  ... [20 set(s)] done [0.00s].
Creating S4 object  ... done [0.00s].
> f
set of 20 itemsets 
> summary(f)
set of 20 itemsets

most frequent items:
      a       b       e       d       c (Other) 
     10      10       9       8       5       0 

element (itemset/transaction) length distribution:sizes
1 2 3 4 
5 9 5 1 

   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
   1.00    1.75    2.00    2.10    3.00    4.00 

summary of quality measures:
    support      
 Min.   :0.1429  
 1st Qu.:0.1429  
 Median :0.2857  
 Mean   :0.2929  
 3rd Qu.:0.3214  
 Max.   :0.7143  

includes transaction ID lists: FALSE 
> inspect(f[1:2])
  items   support
1 {a,            
   b,            
   d,            
   e}   0.1428571
2 {a,            
   d,            
   e}   0.1428571
> labels(f[1:2])
[1] "{a,b,d,e}" "{a,d,e}"  
> 
> 
> ### test subset
> f.sub <- subset(f, subset=items %in% "a")
> labels(f.sub)
 [1] "{a,b,d,e}" "{a,d,e}"   "{a,b,d}"   "{a,d}"     "{a,b,c}"   "{a,c}"    
 [7] "{a,b,e}"   "{a,e}"     "{a,b}"     "{a}"      
> 
> ### test tidlists
> f <- eclat(t, parameter = list(tidLists = TRUE))

parameter specification:
 tidLists support minlen maxlen            target   ext
     TRUE     0.1      1      5 frequent itemsets FALSE

algorithmic control:
 sparse sort verbose
      7   -2    TRUE

eclat - find frequent item sets with the eclat algorithm
version 2.6 (2004.08.16)         (c) 2002-2004   Christian Borgelt
create itemset ... 
set transactions ...[5 item(s), 7 transaction(s)] done [0.00s].
sorting and recoding items ... [5 item(s)] done [0.00s].
creating bit matrix ... [5 row(s), 7 column(s)] done [0.00s].
writing  ... [20 set(s)] done [0.00s].
Creating S4 object  ... done [0.00s].
> f
set of 20 itemsets 
> summary(f)
set of 20 itemsets

most frequent items:
      a       b       e       d       c (Other) 
     10      10       9       8       5       0 

element (itemset/transaction) length distribution:sizes
1 2 3 4 
5 9 5 1 

   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
   1.00    1.75    2.00    2.10    3.00    4.00 

summary of quality measures:
    support      
 Min.   :0.1429  
 1st Qu.:0.1429  
 Median :0.2857  
 Mean   :0.2929  
 3rd Qu.:0.3214  
 Max.   :0.7143  

includes transaction ID lists: TRUE 
> tl <- tidLists(f)
> tl
tidLists in sparse format with
 20 items/itemsets (rows) and
 7 transactions (columns)
> summary(tl)
tidLists in sparse format with
 20 items/itemsets (rows) and
 7 transactions (columns)

most frequent transactions:
    {a}     {b}   {a,b}     {e}     {c} (Other) 
      5       5       4       3       3      21 

item frequency distribution:
sizes
1 2 3 4 5 
9 6 2 1 2 

   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
   1.00    1.00    2.00    2.05    2.25    5.00 

includes extended item information - examples:
     labels
1 {a,b,d,e}
2   {a,d,e}
3   {b,d,e}
> 
> as(tl[1:5], "list")
$`{a,b,d,e}`
[1] "Tr7"

$`{a,d,e}`
[1] "Tr7"

$`{b,d,e}`
[1] "Tr7"

$`{a,b,d}`
[1] "Tr3" "Tr7"

$`{a,d}`
[1] "Tr3" "Tr7"

> 
> 
> 
> 
